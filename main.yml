---
- name: Install hpl benchmark
  hosts: cluster
  become: false
  tags: ['setup']

  vars_files: ['config.yml']

  tasks:
    - name: Update apt
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 600
      become: true

    - name: Install dependencies
      ansible.builtin.package:
        name:
          - build-essential
          - mpi-default-dev
          - cpufrequtils
        state: present
      become: true

    - name: Create CPU governor systemd service
      ansible.builtin.template:
        src: templates/cpu-governor.service.j2
        dest: /etc/systemd/system/cpu-governor.service
        mode: 0644
      notify: reload systemctl
      become: true

    - name: Start and enable cpu-governor service
      ansible.builtin.service:
        name: cpu-governor
        state: started
        enabled: true
      become: true

    - name: Create benchmark directory
      ansible.builtin.file:
        path: "{{ program_dir }}"
        state: directory
        owner: "{{ ansible_user | default(ansible_env.USER, true) | default(ansible_user_id, true) }}"
        group: "{{ ansible_user | default(ansible_env.USER, true) | default(ansible_user_id, true) }}"
        mode: 0755
      become: true

    - name: Download OpenBlas
      ansible.builtin.unarchive:
        src: "https://github.com/xianyi/OpenBLAS/releases/download/v{{ openblas_version }}/{{ openblas_name }}.tar.gz"
        dest: "{{ program_dir }}"
        remote_src: true
        creates: "{{ program_dir }}/{{ openblas_name }}/README.md"

# https://github.com/bgeneto/build-install-compile-openblas
    - name: Build OpenBlas
      ansible.builtin.command: "make USE_THREAD=1 NUM_THREADS={{ ansible_processor_vcpus }} USE_OPENMP=0 DYNAMIC_ARCH=0 COMMON_OPT='{{ compile_flags }}' CFLAGS='{{ compile_flags }}' FCOMMON_OPT='{{ compile_flags }}' FCFLAGS='{{ compile_flags }}'"
      args:
        chdir: "{{ program_dir }}/{{ openblas_name }}"
        creates: "{{ program_dir }}/{{ openblas_name }}/libopenblas.a"

    - name: Download hpl
      ansible.builtin.unarchive:
        src: "https://netlib.org/benchmark/hpl/{{ hpl_name }}.tar.gz"
        dest: "{{ program_dir }}"
        remote_src: true
        creates: "{{ program_dir }}/{{ hpl_name }}/README"

    - name: Copy our makefile to hpl
      ansible.builtin.template:
        src: templates/hpl.Make.OpenBLAS.j2
        dest: "{{ program_dir }}/{{ hpl_name }}/Make.OpenBLAS"
        mode: 0644

    - name: Build hpl
      ansible.builtin.command: "make arch=OpenBLAS"
      args:
        chdir: "{{ program_dir }}/{{ hpl_name }}"
        creates: "{{ program_dir }}/{{ hpl_name }}/bin/OpenBLAS/xhpl"
    
    - name: Copy our HPL.dat to hpl
      ansible.builtin.template:
        src: templates/HPL.dat.j2
        dest: "{{ program_dir }}/{{ hpl_name }}/bin/OpenBLAS/HPL.dat"
        mode: 0644


    - name: Download hpcg
      ansible.builtin.unarchive:
        src: "https://github.com/hpcg-benchmark/hpcg/archive/refs/tags/{{ hpcg_archive_name }}.tar.gz"
        dest: "{{ program_dir }}"
        remote_src: true
        creates: "{{ program_dir }}/{{ hpcg_name }}/README.md"

    - name: Copy our makefile to hpcg
      ansible.builtin.template:
        src: templates/hpcg.Make.Linux_MPI_OMP.j2
        dest: "{{ program_dir }}/{{ hpcg_name }}/setup/Make.Linux_MPI_OMP"
        mode: 0644

    - name: Create hpcg build dir
      ansible.builtin.file:
        path: "{{ program_dir }}/{{ hpcg_name }}/build"
        state: directory

    # For now use the default Linux_MPI configuration
    - name: Build hpcg
      ansible.builtin.command: "{{ item }}"
      args:
        chdir: "{{ program_dir }}/{{ hpcg_name }}/build"
        creates: "{{ program_dir }}/{{ hpcg_name }}/build/bin/xhpcg"
      loop:
        - "{{ program_dir }}/{{ hpcg_name }}/configure Linux_MPI_OMP"
        - "make"
